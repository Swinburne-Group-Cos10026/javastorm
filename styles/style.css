/*
* which means we can easily override them in the future for testing or special case purpose
*/

/* Use open sans font for sans and Oswald for heading */
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Oswald&display=swap");

/* config like colour, theme, font, etc. 
* use css variables
* -> easier to change later on since they are
*		at the top of the file
* -> can reuse
* */
:root {
  /* setting default and global variable for typography */
  --gutter: clamp(4ch, 3.5vmax, 4.75ch);
  --stack: clamp(1.25ex, 2.5vmax, 1.75ex);
  --paragraph-indent: calc(var(--gutter) / 1.3);
  --line-length: 60ch;
  --page-padding-inline: calc((100vw - min(var(--line-length), 80vw)) / 2);
  --font-serif: "Georgia", serif;
  --font-sans: "Open Sans", "Verdana", system-ui, sans-serif;
  --font-mono: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas,
    Liberation Mono, monospace;
  --font-heading: "Oswald", "Impact";
  --pt-double-canon: 4.666em;
  --pt-canon: 3.999em;
  --pt-double-great-primer: 2.999em;
  --pt-double-pica: 2em;
  --pt-paragon: 1.666em;
  --pt-english: 1.166em;
  --pt-pica: 1em;
  --pt-small-pica: 0.916em;
  --pt-long-primer: 0.833em;
  --pt-bourgeois: 0.75em;
  font-family: var(--font-sans);
  /* flexible font-size with view port */
  font-size: clamp(100%, 70% + 0.5vw, 150%);
  /* easier to read with bigger line height */
  line-height: 1.3;

  /* Setting default theme for the web */
  color-scheme: light;
  /* default colour for default ui elements */
  --accent: #5382a1;
  --accent2: #f89820;
  --accent-lighter: #90bad6;
  --accent-darker: #17252e;
  --bg: aliceblue;
  --bg-darker: #e5e9f0;
  --bg-input: rgba(229, 233, 240, 0.1);
  accent-color: var(--accent);
}

/* default background colour - not #ffffff cause too bright */
body {
  background-color: var(--bg);
  padding: 0;
}

main {
  /* overflow-x: hidden; */
  padding: 0 10%;
}

@media only screen and (max-width: 600px) {
  main {
    padding: 0 var(--paragraph-indent);
  }
}

/* reset default css for all element with '*' */
*,
*::before,
*::after {
  /* use font-kernel if the font has support for it */
  font-feature-settings: "kern";
  font-kerning: normal;
  /* easier to manage width and height
		* when using margin or padding
		*/
  box-sizing: border-box;
}

/* default no margin and padding */
* {
  margin: 0;
  padding: 0;
}

/* config css for typical elements and state */
/* use accent colour when selecting */
*::selection {
  background: var(--accent);
}

*:focus-visible {
  outline: 2px solid currentcolor;
  outline-offset: 2px;
}

*:disabled {
  cursor: not-allowed;
  border-style: groove;
}

*[readonly] {
  border-style: dashed;
  background: transparent;
}

/* default css for typography elements */
h2,
h3,
h4,
h5 {
  font-family: var(--font-heading);
  /* space after headers */
  margin: 1.5rem 0;
}

h1 {
  /* the requirement askes me to have short-hand font for h1 */
  font: bold 4em var(--font-heading);
  letter-spacing: 0.5px;
  margin: 1rem 0;
}

h2 {
  letter-spacing: 0px;
  font-size: 3em;
}

h3 {
  letter-spacing: 0.25px;
  font-size: 2em;
}

h4 {
  letter-spacing: 0.5px;
  font-size: 1.75em;
}

h5 {
  letter-spacing: 1px;
  font-size: 1.3em;
}

input,
textarea,
span,
label,
p {
  font: 1em var(--font-sans);
  /* easier to read with bigger line height */
  line-height: 1.3;
}

p {
  /* space between paragraph */
  margin-bottom: 1.5em;
}

/***************
* Form Elements
****************/
form {
  max-width: 600px;
  margin: 0 auto;
}

.form-control {
  position: relative;
  margin-bottom: 20px;
}

input:not([type="radio"], [type="checkbox"], [type="file"]),
textarea,
select {
  /* default settings for input with border and darker background */
  border: 2px solid gray;
  border-radius: 5px;
  background-color: var(--bg-input);
  /* bigger default input */
  padding: 1rem 0.6rem;
  /* remove default outline but still keep it for constrasted theme */
  outline-color: transparent;
  transition: padding 0.4s;
  font-size: 1em;
  width: 100%;
}

input:focus {
  outline-color: transparent;
}

input:disabled ~ * {
  opacity: 0.3;
  user-select: none;
  pointer-events: none;
}

textarea {
  height: auto;
  min-height: 100px;
}

textarea::-webkit-scrollbar {
  display: none;
}

/* material input */
select:invalid + label,
textarea:placeholder-shown + label,
input:not([type="radio"], [type="checkbox"], [type="file"]):placeholder-shown
  + label {
  color: #aaa;
  font-size: 1rem;
  top: 1.2rem;
  left: 1em;
}

select + label,
textarea + label,
input:not([type="radio"], [type="checkbox"], [type="file"]) + label,
textarea:focus + label,
input:not([type="radio"], [type="checkbox"], [type="file"]):focus + label {
  color: var(--accent);
  font-size: 0.6em;
  pointer-events: none;
  position: absolute;
  top: 5px;
  left: 1em;
  transition: top 0.4s, left 0.4s, font-size 0.4s;
}

textarea::placeholder,
input:not([type="radio"], [type="checkbox"], [type="file"])::placeholder {
  color: transparent;
}

select:valid,
textarea:focus,
textarea:not(:placeholder-shown),
input:not([type="radio"], [type="checkbox"], [type="file"]):focus,
input:not([type="radio"], [type="checkbox"], [type="file"]):not(
    :placeholder-shown
  ) {
  border: 2px solid var(--accent);
  outline: none;
  padding: 1em 0.6em;
}

/* checkbox */
input[type="checkbox"].checkbox {
  display: none;
}

input[type="checkbox"].checkbox + label {
  position: relative;
  vertical-align: middle;
  cursor: pointer;
  font-weight: 500;
  padding-left: 35px;
}

input[type="checkbox"].checkbox + label span.box {
  display: inline-block;
  width: 20px;
  border-radius: 5px;
  border: 1px solid black;
  width: 24px;
  height: 24px;
  vertical-align: middle;
  margin-right: 3px;
  transition: 0.3s ease;
  position: absolute;
  left: 0;
}

input[type="checkbox"].checkbox + label span.box:before,
input[type="checkbox"].checkbox + label span.box:after {
  content: "";
  position: absolute;
  width: 4px;
  height: 16px;
  border-radius: 40px;
  background: var(--bg);
  transition: all 0.3s ease;
}

input[type="checkbox"].checkbox + label span.box:before {
  transform: rotate(45deg) translateY(-5px) translateX(10px) scale(0);
}

input[type="checkbox"].checkbox + label span.box:after {
  height: 8px;
  transform: rotate(-45deg) translateY(10px) translateX(-4px) scale(0);
}

input[type="checkbox"].checkbox:checked + label span.box {
  background: var(--accent);
  border-color: var(--accent);
}

input[type="checkbox"].checkbox:checked + label span.box:before {
  transform: rotate(45deg) translateY(-5px) translateX(10px) scale(1);
}

input[type="checkbox"].checkbox:checked + label span.box:after {
  height: 8px;
  transform: rotate(-45deg) translateY(10px) translateX(-4px) scale(1);
}

input[type="checkbox"].checkbox:disabled:checked + label span.box {
  background: var(--bg);
  border: var(--bg);
}

input[type="checkbox"].checkbox:disabled:checked + label:before,
input[type="checkbox"].checkbox:disabled:checked + label:after {
  background: black;
}

/* radio buttons */
fieldset {
  display: flex;
  border: 2px solid gray;
  border-radius: 5px;
  background-color: var(--bg-input);
  align-items: center;
  justify-content: space-around;
  width: 100%;
}

fieldset .form-control {
  margin-bottom: 0;
  text-align: center;
}

fieldset legend {
  font-family: var(--font-sans);
  font-size: 0.8em;
  padding: 0 3px;
}

input[type="radio"].radio {
  display: none;
}

input[type="radio"].radio:checked + label:after {
  transform: scale(1);
}

input[type="radio"].radio:checked + label {
  color: black;
}

input[type="radio"].radio + label {
  color: #aaa;
  position: relative;
  padding-left: 24px;
  cursor: pointer;
}

input[type="radio"].radio + label:before {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  border: 1.3px solid #aaa;
  border-radius: 50%;
  left: 0;
  top: calc(50% - 8px);
}

input[type="radio"].radio + label:after {
  content: "";
  position: absolute;
  width: 12px;
  height: 12px;
  top: calc(50% - 8px + 2px);
  left: 2px;
  background: var(--accent);
  border-radius: 50%;
  transform: scale(0);
  transition: 0.3s ease;
}

@media only screen and (max-width: 600px) {
  input[type="radio"].radio + label:before {
    left: 2px;
    top: calc(25% - 8px);
  }

  input[type="radio"].radio + label:after {
    left: 4px;
    top: calc(25% - 8px + 2px);
  }
}

/*********************
* Lists
***********************/

ul,
ol {
  margin-block-start: var(--stack);
}

/* make list character start at the normal
* position like other texts */
li {
  margin-inline-start: 2ch;
}

dl {
  display: grid;
  grid-template-columns: auto minmax(75%, 1fr);
  gap: calc(var(--gutter) / 2);
  align-items: baseline;
  padding-block-start: calc(var(--stack) / 2.5);
}

dd {
  block-size: 100%;
  border-image-slice: 1;
  padding-block: calc(var(--stack) / 6);
  padding-inline: calc(var(--gutter) / 3);
}

dt {
  /* no actual common size 
*  The common size is from
*  the grid on dl
*  which is 25%*/
  text-decoration: underline;
  text-decoration-style: dotted;
  text-underline-offset: 0.3ex;
}

/****************
* Table
* ***************/

table {
  border-collapse: collapse;
  border-radius: 10px;
  /* border for table with border collapse */
  border-style: hidden;
  box-shadow: 0 0 0 1px var(--accent-darker);
  overflow: hidden;
}

table,
th,
td {
  padding: 8px;
  text-align: center;
  border: 1px solid var(--accent-darker);
}

th {
  color: white;
  background-color: var(--accent);
}

.time {
  font-weight: bold;
}

/******************
* Better default links
*******************/
a {
  color: inherit;
  text-decoration: none;
}

/* Underline styles - details of technique here: https://nickymeuleman.netlify.app/blog/css-animated-wrapping-underline */
a.link {
  background: linear-gradient(
      to right,
      rgba(100, 200, 200, 1),
      rgba(100, 200, 200, 1)
    ),
    linear-gradient(
      to right,
      rgba(255, 0, 0, 1),
      rgba(255, 0, 180, 1),
      rgba(0, 100, 200, 1)
    );
  background-size: 100% 0.1em, 0 0.1em;
  background-position: 100% 100%, 0 100%;
  background-repeat: no-repeat;
  transition: background-size 400ms;
}

a.link:hover,
a.link:focus {
  background-size: 0 0.1em, 100% 0.1em;
}

/* use class instead of the element button
* since we can have button as input or a tag */
.btn {
  position: relative;
  font-size: 0.8em;

  display: block;
  margin: 30px auto;
  padding: 1.5em 1em;

  overflow: hidden;

  border-width: 0;
  outline: none;
  border-radius: 2px;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.6);

  background-color: var(--accent);
  color: #ecf0f1;

  transition: background-color 0.3s;
}

.btn:hover,
.btn:focus {
  filter: brightness(85%);
}

.btn > * {
  position: relative;
}

.btn span {
  display: block;
  padding: 12px 24px;
}

.btn:before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  width: 0;
  padding-top: 0;
  border-radius: 100%;
  background-color: var(--bg-input);
  transform: translate(-50%, -50%);
}

.btn:active:before {
  width: 120%;
  padding-top: 120%;

  transition: width 0.2s ease-out, padding-top 0.2s ease-out;
}

/**********
* Nav Bar *
***********/
header {
  width: 100vw;
  margin-bottom: 3em;
  height: 80px;
  background: var(--accent-darker);
}

#header__home,
#header__jobs,
#header__about {
  background: none;
  height: 100vh;
}

#header__home::before,
#header__about::before,
#header__jobs::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  height: 100%;
  width: 100%;
  background-repeat: no-repeat;
  background-size: cover;
  z-index: -1;
}

#header__home::before {
  background-image: url("images/banner__home.jpg");
  filter: brightness(50%);
}

#header__about::before {
  background-image: url("images/banner__about.jpg");
  filter: brightness(50%);
}

#header__jobs::before {
  background-image: url("images/banner__jobs.jpg");
  filter: brightness(50%);
}

#navbar {
  box-shadow: rgba(216, 222, 233, 0.15) 0px 5px 10px 0px;
  width: 100%;
  height: 80px;
  padding: 0.6em 10%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: var(--bg);
  position: relative;
}

nav {
  position: absolute;
  right: 4rem;
  display: table;
  width: 800px;
  height: 1rem;
}

nav a {
  position: relative;
  width: 20%;
  display: table-cell;
  text-align: left;
  text-decoration: none;
  padding: 10px 20px;
  transition: 0.2s ease color;
  font-size: 0.8em;
}

nav a:before,
nav a:after {
  content: "";
  position: absolute;
  border-radius: 50%;
  transform: scale(0);
  transition: 0.2s ease transform;
}

nav a:before {
  top: 0;
  left: 10px;
  width: 6px;
  height: 6px;
}

nav a:after {
  top: 5px;
  left: 18px;
  width: 4px;
  height: 4px;
}

nav a:nth-child(1):before {
  background-color: yellow;
}

nav a:nth-child(1):after {
  background-color: red;
}

nav a:nth-child(2):before {
  background-color: #00e2ff;
}

nav a:nth-child(2):after {
  background-color: #89ff00;
}

nav a:nth-child(3):before {
  background-color: purple;
}

nav a:nth-child(3):after {
  background-color: palevioletred;
}

nav a:nth-child(4):before {
  background-color: grey;
}

nav a:nth-child(4):after {
  background-color: var(--accent);
}

nav a:nth-child(5):before {
  background-color: royalblue;
}

nav a:nth-child(5):after {
  background-color: aliceblue;
}

#indicator {
  position: absolute;
  bottom: 0;
  width: 30px;
  height: 3px;
  background-color: var(--bg);
  border-radius: 5px;
  transition: 0.2s ease left;
}

nav a:nth-child(1).nav-link__current ~ #indicator {
  left: 0%;
}
nav a:nth-child(2).nav-link__current ~ #indicator {
  left: 20%;
}
nav a:nth-child(3).nav-link__current ~ #indicator {
  left: 40%;
}
nav a:nth-child(4).nav-link__current ~ #indicator {
  left: 60%;
}
nav a:nth-child(5).nav-link__current ~ #indicator {
  left: 80%;
}

#navbar nav a:hover,
#navbar #logo:hover {
  color: var(--accent2);
}

nav a:hover:before,
nav a:hover:after {
  transform: scale(1);
}

nav a:nth-child(1):hover ~ #indicator {
  left: 0%;
  background: linear-gradient(130deg, yellow, red);
}

nav a:nth-child(2):hover ~ #indicator {
  left: 20%;
  background: linear-gradient(130deg, #00e2ff, #89ff00);
}

nav a:nth-child(3):hover ~ #indicator {
  left: 40%;
  background: linear-gradient(130deg, purple, palevioletred);
}

nav a:nth-child(4):hover ~ #indicator {
  left: 60%;
  background: linear-gradient(130deg, grey, var(--accent));
}

nav a:nth-child(5):hover ~ #indicator {
  left: 80%;
  background: linear-gradient(130deg, royalblue, aliceblue);
}

#banner {
  height: calc(100vh - 60px);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 25px;
  color: var(--bg);
  text-shadow: 1px 1px 2px var(--accent-darker);
  text-align: center;
}

/* For tablet and phone */
#menu--checker__label {
  display: none;
}

#menu--checker__label .menu {
  position: absolute;
  right: -80px;
  top: -80px;
  z-index: 100;
  width: 160px;
  height: 160px;
  transition: 0.5s ease-in-out;
  box-shadow: 0 0 0 0 var(--bg), 0 0 0 0 var(--bg);
  cursor: pointer;
  border-radius: 50%;
  background: var(--bg);
}

#menu--checker__label .hamburger {
  position: absolute;
  top: 115px;
  left: 40px;
  width: 30px;
  height: 2px;
  background: var(--accent-lighter);
  display: block;
  transform-origin: center;
  transition: 0.5s ease-in-out;
}

#menu--checker__label .hamburger:after,
#menu--checker__label .hamburger:before {
  transition: 0.5s ease-in-out;
  content: "";
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  background: var(--accent-lighter);
}

#menu--checker__label .hamburger:before {
  top: -10px;
}

#menu--checker__label .hamburger:after {
  bottom: -10px;
}

#menu--checker {
  display: none;
}

#menu--checker:checked + #menu--checker__label {
  height: 100vh;
  width: 100vw;
}

#menu--checker:checked + #menu--checker__label .menu {
  box-shadow: 0 0 0 100vw var(--bg), 0 0 0 100vh var(--bg);
  border-radius: 0;
}

#menu--checker:checked + #menu--checker__label .menu .hamburger {
  transform: rotate(45deg);
}

#menu--checker:checked + #menu--checker__label .menu .hamburger:after {
  transform: rotate(90deg);
  bottom: 0;
}

#menu--checker:checked + #menu--checker__label .menu .hamburger:before {
  transform: rotate(90deg);
  top: 0;
}

@media only screen and (max-width: 1000px) {
  #menu--checker__label {
    display: block;
  }

  nav {
    transition: 0.3s ease-in-out opacity;
    opacity: 0;
    position: absolute;
    height: 360px;
    width: 200px;
    top: calc(50vh - 180px);
    left: calc(50vw - 100px);
    color: var(--accent-darker);
    display: flex;
    flex-direction: column;
    z-index: 101;
  }

  #indicator {
    background-color: var(--accent-darker);
  }

  nav a {
    font-size: 1.5em;
    width: 100%;
    height: 20%;
  }

  nav a:nth-child(1).nav-link__current ~ #indicator {
    left: 10px;
    top: calc(0% + 40px);
  }
  nav a:nth-child(2).nav-link__current ~ #indicator {
    left: 10px;
    top: calc(20% + 40px);
  }
  nav a:nth-child(3).nav-link__current ~ #indicator {
    left: 10px;
    top: calc(40% + 40px);
  }
  nav a:nth-child(4).nav-link__current ~ #indicator {
    left: 10px;
    top: calc(60% + 40px);
  }
  nav a:nth-child(5).nav-link__current ~ #indicator {
    left: 10px;
    top: calc(80% + 40px);
  }

  nav a:nth-child(1):hover ~ #indicator {
    left: 10px;
    top: calc(0% + 40px);
    background: linear-gradient(130deg, yellow, red);
  }

  nav a:nth-child(2):hover ~ #indicator {
    left: 10px;
    top: calc(20% + 40px);
    background: linear-gradient(130deg, #00e2ff, #89ff00);
  }

  nav a:nth-child(3):hover ~ #indicator {
    left: 10px;
    top: calc(40% + 40px);
    background: linear-gradient(130deg, purple, palevioletred);
  }

  nav a:nth-child(4):hover ~ #indicator {
    left: 10px;
    top: calc(60% + 40px);
    background: linear-gradient(130deg, grey, var(--accent));
  }

  nav a:nth-child(5):hover ~ #indicator {
    left: 10px;
    top: calc(80% + 40px);
    background: linear-gradient(130deg, royalblue, aliceblue);
  }

  #menu--checker:checked + #menu--checker__label + nav {
    opacity: 1;
  }
}

/*******
* Footer
* ******/

footer {
  margin-top: 3em;
  background-color: var(--accent-darker);
  padding: 1em;
}

.site-footer {
  padding: 45px 0 20px;
  font-size: 15px;
  line-height: 24px;
  color: #737373;
  display: flex;
  padding: 4rem;
  justify-content: space-between;
}

.site-footer a {
  color: #737373;
}

.site-footer a:hover {
  color: #3366cc;
  text-decoration: none;
}

.footer-links {
  padding: 0;
  list-style: none;
  margin-right: 2px;
}

.footer-links li {
  display: block;
}

.footer-links a {
  color: #737373;
}

.footer-links a:active,
.footer-links a:focus,
.footer-links a:hover {
  color: var(--accent-lighter);
  text-decoration: none;
}

.footer-links.inline li {
  display: inline-block;
}

.copyright-text {
  text-align: center;
  font-size: 0.8em;
  margin-bottom: 0;
  color: var(--bg);
}

@media only screen and (max-width: 600px) {
  .site-footer {
    flex-direction: column;
    text-align: center;
  }

  .site-footer li {
    display: inline-block;
  }
}

/*******
* Home Page
********/

/* Quality and Standard */
.quality-boxes,
.standards-boxes {
  margin: auto;
  border-top: 1px solid var(--accent-darker);
  border-bottom: 1px solid var(--accent-darker);
}

.quality-box,
.standard-box {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}

.quality-box img,
.standard-box img {
  width: 100%;
}

.quality-box__content,
.standard-box__content {
  display: flex;
  justify-content: center;
  flex-direction: column;
  padding: 0 1em;
}

.quality-box:nth-child(even) .quality-box__content,
.quality-box:nth-child(odd) img,
.standard-box:nth-child(even) .standard-box__content,
.standard-box:nth-child(odd) img {
  grid-column-start: 2;
  grid-row-start: 1;
}

.quality-box:nth-child(odd) .quality-box__content,
.quality-box:nth-child(even) img,
.standard-box:nth-child(odd) .standard-box__content,
.standard-box:nth-child(even) img {
  grid-column-start: 1;
  grid-row-start: 1;
}

/* Events */

.events {
  overflow-x: scroll;
  overflow-y: hidden;
  height: 450;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  margin-bottom: 1em;
  width: 100%;
}

.event {
  width: 300px;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 1em;
}

.event img {
  width: 300px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: 0.1s ease-in-out filter;
}

.event__detail {
  opacity: 0;
  color: var(--accent-lighter);
  z-index: 10;
  transition: 0.3s ease-in-out opacity;
  font-size: 0.8em;
}

.event:hover .event__detail {
  opacity: 1;
}

.event:hover img {
  filter: brightness(20%);
}

/* Previous Project */

.projects {
  display: grid;
  overflow-x: scroll;
  grid-template-rows: repeat(auto, 1fr);
  width: 100%;
}

.project {
  width: 300px;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  color: var(--bg);
  grid-row-start: 1;
  margin: 0 1em;
  padding: 1em;
  text-shadow: 1px 1px 2px var(--accent-darker);
}

#project--ctech {
  background-image: url("images/cTech.jpg");
}

#project--os {
  background-image: url("images/operate_system.jpg");
}

#project--apple {
  background-image: url("images/apple.jpg");
}

#project--intel {
  background-image: url("images/intel.jpg");
}

#project--samsung {
  background-image: url("images/samsung.jpg");
}

#project--telecom {
  background-image: url("images/telecom.jpg");
}

/*******
* About Page
********/

.group-info__dl {
  height: 400px;
  float: left;
}

.group-info__figure {
  display: block;
}

.group-info__figure img {
  height: 400px;
  border: 2px dotted black;
  border-radius: 10px;
}

/* Setting size of the card */
.team-members__container {
  float: clear;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 10px;
}

@media only screen and (max-width: 600px) {
  .team-members__container {
    display: flex;
    flex-direction: column;
    align-items: center;
    grid-template-columns: repeat(1, 1fr);
  }
}

.personal-info-card {
  position: relative;
  height: 360px;
  width: 270px;
}

.personal-info-card figcaption {
  position: absolute;
  top: 15px;
  left: 15px;
  font-size: 1.2em;
  font-family: var(--font-heading);
}

.personal-info-card .personal-info-card__role {
  position: absolute;
  bottom: 15px;
  right: 15px;
  font-size: 0.8em;
  font-family: var(--font-sans);
}

.personal-info-card figcaption,
.personal-info-card .personal-info-card__role {
  color: white;
  text-shadow: 1px 1px 2px var(--accent-darker);
}

/* contain the image */
.personal-info-card__border {
  display: block;
  border-radius: 10px;
  position: relative;
  width: 270px;
  height: 360px;
  background-size: 300px;
  background-repeat: no-repeat;
  background-position: center;
  transition: ease-in-out 600ms background;
  z-index: 10;
}

.personal-info-card__border::before {
  content: "";
  position: absolute;
  display: block;
  /* border around the card */
  /* margin 10px -> position 5px */
  top: 5px;
  left: 5px;
  width: 260px;
  height: 350px;
  transition: ease-in-out 300ms border;
  border-radius: 10px;
  border: 2px solid;
  border-color: transparent;
}

.personal-info-card__detail {
  position: absolute;
  width: 600px;
  height: 350px;
  top: 0;
  left: 270px;
  z-index: -1;
  font-size: 0.8em;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@media only screen and (max-width: 600px) {
  .personal-info-card__detail {
    width: 300px;
  }
}

/* Setting background photo for each person */
.personal-info-card--Pham .personal-info-card__border {
  background-image: url("images/Pham.JPG");
}
.personal-info-card--Minh .personal-info-card__border {
  background-image: url("images/Minh.JPG");
}
.personal-info-card--Jean .personal-info-card__border {
  background-image: url("images/Jean.JPG");
}
.personal-info-card--Indigo .personal-info-card__border {
  background-image: url("images/Indigo.JPG");
}
.personal-info-card--Burhan .personal-info-card__border {
  background-image: url("images/Burhan.jpg");
}

.personal-info-card figcaption,
.personal-info-card__role,
.personal-info-card__detail {
  opacity: 0;
  transition: ease-in-out 300ms transform;
}

.personal-info-card:hover .personal-info-card__border {
  background-position: left;
  background-size: 450px;
}

input[name="personal-info-card__label"]:checked
  + .personal-info-card
  .personal-info-card__border::before,
.personal-info-card:hover .personal-info-card__border::before {
  border-color: white;
}

/* make radio button disappear */
input[name="personal-info-card__label"] {
  display: none;
}

.personal-info-card:hover figcaption,
.personal-info-card:hover .personal-info-card__role,
input[name="personal-info-card__label"]:checked
  + .personal-info-card
  figcaption,
input[name="personal-info-card__label"]:checked
  + .personal-info-card
  .personal-info-card__role,
input[name="personal-info-card__label"]:checked
  + .personal-info-card
  .personal-info-card__detail {
  opacity: 1;
}

input[name="personal-info-card__label"]:checked + .personal-info-card {
  grid-column-start: 1;
  grid-column-end: span 5;
  grid-row-start: 1;
}

input[name="personal-info-card__label"]:checked
  + .personal-info-card
  .personal-info-card__detail {
  /* Move out of the card (width 270px)
	 * with margin 30px */
  transform: translateX(30px);
}

@media only screen and (max-width: 600px) {
  input[name="personal-info-card__label"]:checked + .personal-info-card {
    height: 650px;
  }

  input[name="personal-info-card__label"]:checked
    + .personal-info-card
    .personal-info-card__detail {
    left: 0;
    top: 300px;
    /* Move out of the card (height 360px) */
    transform: translateX(0) translateY(30px);
  }
}

.timetable__container {
  /* show the border of the table */
  padding: 1px;
  overflow-x: auto;
}

.timetable__container table {
  width: 50%;
}

/*******
* Apply Page
********/

/* Make form grid so that i can have some 
* input only half size and in the same
* line as other input */
#form__apply {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  justify-content: center;
  grid-gap: 10px;
}

#form__apply h1 {
  text-align: center;
}

/* Making some input fullsize */
#form__apply button,
#form__apply h1,
#form__apply h5,
#street-address__container,
#surburb-town__container,
#job-reference-number__container {
  grid-column-start: 1;
  grid-column-end: span 2;
  width: 100%;
}

/* Other skill textarea only pop up if 
* chosen */
#skill-others__textarea {
  margin-top: 1em;
  display: none;
  resize: none;
}

#skill-others:checked ~ #skill-others__textarea {
  display: block;
}

/* Jobs Page */

.job {
  position: relative;
  background: var(--bg);
  box-shadow: 0 3px 15px rgba(51, 51, 51, 0.2);
  border-radius: 10px;
  overflow: hidden;
  transition: 0.2s ease;
  display: grid;
  grid-template-rows: repeat(6, auto);
  grid-template-columns: 4fr 1fr;
  padding: 1.5em 2em;
  font-size: 0.8em;
  width: 100%;
}

.job .btn {
  grid-column: 4;
  grid-row: 6;
  justify-content: right;
}

.job_overview {
  grid-column: 1/3;
  grid-row: 1/3;
}

.job_details {
  grid-template-columns: auto auto auto;
  grid-template-rows: auto auto;
  width: 100%;
  grid-row: 4/5;
  display: flex;
  flex-flow: row wrap;
}

.job_details--container {
  display: inline-flex;
  background: var(--accent-lighter);
  border-radius: 0.25rem;
  align-items: center;
  justify-content: center;
  font-size: 0.8rem !important;
  color: var(--accent-darker);
  padding: 0.1875rem 0.5rem;
  margin-right: 0.25rem;
  margin-bottom: 0.25rem;
}

.job_details--container p {
  margin-bottom: 0;
}

.job_details--title {
  text-transform: uppercase;
  display: flex;
  align-items: center;
}

img.icon {
  color: var(--accent-darker);
  vertical-align: middle;
  width: 1rem;
  height: 1rem;
}

.job_reference_number {
  grid-column: 1;
  grid-row: 6;
}

.job_referece_number p {
  font-size: 0.9em;
  color: darkgray;
}

.job + aside {
  width: 100%;
  max-height: 0;
  opacity: 0;
  padding: 1em;
  background: var(--bg);
  box-shadow: 0 3px 15px rgba(51, 51, 51, 0.2);
  border-radius: 10px;
  transition: ease-in-out 600ms all;
}

.job:hover + aside {
  max-height: 500px;
  opacity: 1;
  margin: 1em 0;
}

/* Specific Job Roles Page */
.job--description .btn {
  text-align: center;
}

.job--responsibilities,
.job--skills {
  display: inline-block;
  width: 60%;
}

.job--benefits {
  float: right;
  width: 25%;
  border: 2px dotted var(--accent);
  border-radius: 10px;
  padding: 0 0.8em;
  font-size: 0.8em;
}

@media only screen and (max-width: 600px) {
  .job--responsibilities,
  .job--skills {
    width: 100%;
  }
  .job--benefits {
    width: 100%;
    border: none;
    float: clear;
    font-size: 1em;
  }
}
