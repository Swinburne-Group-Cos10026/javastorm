/*
* which means we can easily override them in the future for testing or special case purpose
*/

/* Use open sans font for sans and Oswald for heading */
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Oswald&display=swap");

/* config like colour, theme, font, etc. 
* use css variables
* -> easier to change later on since they are
*		at the top of the file
* -> can reuse
* */
:root {
  /* setting default and global variable for typography */
  --gutter: clamp(3ch, 2.5vmax, 3.75ch);
  --stack: clamp(1.25ex, 2.5vmax, 1.75ex);
  --paragraph-indent: calc(var(--gutter) / 1.5);
  --line-length: 60ch;
  --page-padding-inline: calc((100vw - min(var(--line-length), 80vw)) / 2);
  --font-serif: "Georgia", serif;
  --font-sans: "Open Sans", "Verdana", system-ui, sans-serif;
  --font-mono: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas,
    Liberation Mono, monospace;
  --font-heading: "Oswald", "Impact";
  --pt-double-canon: 4.666em;
  --pt-canon: 3.999em;
  --pt-double-great-primer: 2.999em;
  --pt-double-pica: 2em;
  --pt-paragon: 1.666em;
  --pt-english: 1.166em;
  --pt-pica: 1em;
  --pt-small-pica: 0.916em;
  --pt-long-primer: 0.833em;
  --pt-bourgeois: 0.75em;
  font-family: var(--font-sans);
  /* flexible font-size with view port */
  font-size: clamp(100%, 90% + 0.5vw, 150%);
  /* easier to read with bigger line height */
  line-height: 1.3;

  /* Setting default theme for the web */
  color-scheme: light;
  /* default colour for default ui elements */
  --accent: #5382a1;
  --accent-darker: #17252e;
  --bg: aliceblue;
  --bg-darker: #e5e9f0;
  --bg-input: rgba(229, 233, 240, 0.1);
  accent-color: var(--accent);
}

/* default background colour - not #ffffff cause too bright */
body {
  background-color: var(--bg);
	padding: 0;
}

main {
  padding: 0 var(--paragraph-indent);
}

/* reset default css for all element with '*' */
*,
*::before,
*::after {
  /* use font-kernel if the font has support for it */
  font-feature-settings: "kern";
  font-kerning: normal;
  /* easier to manage width and height
		* when using margin or padding
		*/
  box-sizing: border-box;
}

/* default no margin and padding */
* {
  margin: 0;
  padding: 0;
}

/* config css for typical elements and state */
/* use accent colour when selecting */
*::selection {
  background: var(--accent);
}

*:focus-visible {
  outline: 2px solid currentcolor;
  outline-offset: 2px;
}

*:disabled {
  cursor: not-allowed;
  border-style: groove;
}

*[readonly] {
  border-style: dashed;
  background: transparent;
}

/* default css for typography elements */
h2,
h3,
h4,
h5 {
  font-family: var(--font-heading);
  /* space after headers */
  margin-bottom: 0.5rem;
}

h1 {
  /* the requirement askes me to have short-hand font for h1 */
  font: bold 4em var(--font-heading);
  letter-spacing: 0.5px;
}

h2 {
  letter-spacing: 0px;
  font-size: 3em;
}

h3 {
  letter-spacing: 0.25px;
  font-size: 2.5em;
}

h4 {
  letter-spacing: 0.5px;
  font-size: 2em;
}

h5 {
  letter-spacing: 1px;
  font-size: 1.3em;
}

input,
textarea,
span,
label,
p {
  font: 1em var(--font-sans);
  /* easier to read with bigger line height */
  line-height: 1.3;
}

p {
  /* space between paragraph */
  margin-bottom: 0.75rem;
}

/***************
* Form Elements
****************/
form {
  max-width: 600px;
  margin: 0 auto;
}

.form-control {
  position: relative;
  margin-bottom: 20px;
}

input:not([type="radio"], [type="checkbox"], [type="file"]),
textarea,
select {
  /* default settings for input with border and darker background */
  border: 2px solid gray;
  border-radius: 5px;
  background-color: var(--bg-input);
  /* bigger default input */
  padding: 1rem 0.6rem;
  /* remove default outline but still keep it for constrasted theme */
  outline-color: transparent;
  transition: padding 0.4s;
  font-size: 1em;
	width: 100%;
}

input:focus {
  outline-color: transparent;
}

input:disabled ~ * {
  opacity: 0.3;
  user-select: none;
  pointer-events: none;
}

textarea {
  height: auto;
  min-height: 100px;
}

textarea::-webkit-scrollbar {
  display: none;
}

/* material input */
select:invalid + label,
textarea:placeholder-shown + label,
input:not([type="radio"], [type="checkbox"], [type="file"]):placeholder-shown
  + label {
  color: #aaa;
  font-size: 1rem;
  top: 1.2rem;
  left: 1em;
}

select + label,
textarea + label,
input:not([type="radio"], [type="checkbox"], [type="file"]) + label,
textarea:focus + label,
input:not([type="radio"], [type="checkbox"], [type="file"]):focus + label {
  color: var(--accent);
  font-size: 0.6em;
  pointer-events: none;
  position: absolute;
  top: 5px;
  left: 1em;
  transition: top 0.4s, left 0.4s, font-size 0.4s;
}

textarea::placeholder,
input:not([type="radio"], [type="checkbox"], [type="file"])::placeholder {
  color: transparent;
}

select:valid,
textarea:focus,
textarea:not(:placeholder-shown),
input:not([type="radio"], [type="checkbox"], [type="file"]):focus,
input:not([type="radio"], [type="checkbox"], [type="file"]):not(
    :placeholder-shown
  ) {
  border: 2px solid var(--accent);
  outline: none;
  padding: 1em 0.6em;
}

/* checkbox */
input[type='checkbox'].checkbox {
  display: none;
}

input[type='checkbox'].checkbox + label {
  position: relative;
  vertical-align: middle;
  cursor: pointer;
  font-weight: 500;
  padding-left: 35px;
}

input[type='checkbox'].checkbox + label span.box {
  display: inline-block;
  width: 20px;
  border-radius: 5px;
  border: 1px solid black;
  width: 24px;
  height: 24px;
  vertical-align: middle;
  margin-right: 3px;
  transition: 0.3s ease;
  position: absolute;
  left: 0;
}

input[type='checkbox'].checkbox + label span.box:before,
input[type='checkbox'].checkbox + label span.box:after {
  content: "";
  position: absolute;
  width: 4px;
  height: 16px;
  border-radius: 40px;
  background: var(--bg);
  transition: all 0.3s ease;
}

input[type='checkbox'].checkbox + label span.box:before {
  transform: rotate(45deg) translateY(-5px) translateX(10px) scale(0);
}

input[type='checkbox'].checkbox + label span.box:after {
  height: 8px;
  transform: rotate(-45deg) translateY(10px) translateX(-4px) scale(0);
}

input[type='checkbox'].checkbox:checked + label span.box {
  background: var(--accent);
  border-color: var(--accent);
}

input[type='checkbox'].checkbox:checked + label span.box:before {
  transform: rotate(45deg) translateY(-5px) translateX(10px) scale(1);
}

input[type='checkbox'].checkbox:checked + label span.box:after {
  height: 8px;
  transform: rotate(-45deg) translateY(10px) translateX(-4px) scale(1);
}

input[type='checkbox'].checkbox:disabled:checked + label span.box {
  background: var(--bg);
  border: var(--bg);
}

input[type='checkbox'].checkbox:disabled:checked + label:before,
input[type='checkbox'].checkbox:disabled:checked + label:after {
  background: black;
}

/*radio buttons*/
fieldset {
	display: flex;
  border: 2px solid gray;
  border-radius: 5px;
  background-color: var(--bg-input);
	align-items: center;
	justify-content: space-around;
	width: 100%;
}

fieldset .form-control {
	margin-bottom: 0;
	text-align: center;
}

fieldset legend {
	font-family: var(--font-sans);
	font-size: .8em;
	padding: 0 3px;
}

input[type='radio'] {
  display: none;
}

input[type='radio']:checked + label:after {
  transform: scale(1);
}

input[type='radio']:checked + label {
	color: black;
}

input[type='radio'] + label {
  color: #aaa;
  position: relative;
  padding-left: 24px;
  cursor: pointer;
}

input[type='radio'] + label:before {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  border: 1.3px solid #aaa;
  border-radius: 50%;
  left: 0;
	top: calc(50% - 8px);
}

input[type='radio'] + label:after {
  content: "";
  position: absolute;
  width: 12px;
  height: 12px;
  top: calc(50% - 8px + 2px);
  left: 2px;
  background: var(--accent);
  border-radius: 50%;
  transform: scale(0);
  transition: 0.3s ease;
}

@media only screen and (max-width: 600px) {
input[type='radio'] + label:before {
  left: 2px;
	top: calc(25% - 8px);
}

input[type='radio'] + label:after {
  left: 4px;
	top: calc(25% - 8px + 2px);
}
}

/******************
* Better default links
*******************/
a {
  color: inherit;
  text-decoration: none;
}

/* Underline styles - details of technique here: https://nickymeuleman.netlify.app/blog/css-animated-wrapping-underline */
a.link {
  background: linear-gradient(
      to right,
      rgba(100, 200, 200, 1),
      rgba(100, 200, 200, 1)
    ),
    linear-gradient(
      to right,
      rgba(255, 0, 0, 1),
      rgba(255, 0, 180, 1),
      rgba(0, 100, 200, 1)
    );
  background-size: 100% 0.1em, 0 0.1em;
  background-position: 100% 100%, 0 100%;
  background-repeat: no-repeat;
  transition: background-size 400ms;
}

a.link:hover,
a.link:focus {
  background-size: 0 0.1em, 100% 0.1em;
}

button {
  position: relative;
	font-size: .8em;

  display: block;
  margin: 30px auto;
  padding: 1.5em 1em;

  overflow: hidden;

  border-width: 0;
  outline: none;
  border-radius: 2px;
  box-shadow: 0 1px 4px rgba(0, 0, 0, .6);

  background-color: var(--accent);
  color: #ecf0f1;

  transition: background-color .3s;
}

button:hover,
button:focus {
  filter: brightness(85%);
}

button > * {
  position: relative;
}

button span {
  display: block;
  padding: 12px 24px;
}

button:before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  width: 0;
  padding-top: 0;
  border-radius: 100%;
  background-color: var(--bg-input);
  transform: translate(-50%, -50%);
}

button:active:before {
  width: 120%;
  padding-top: 120%;
  
  transition: width .2s ease-out, padding-top .2s ease-out;
}

/**********
* Nav Bar *
***********/
header {
	background-color: var(--accent-darker);
	box-shadow: rgba(216, 222, 233, 0.15) 0px 5px 10px 0px;
	width: 100%;
	height: 80px;
	padding: .6em;
	margin-bottom: .5em;
	display: flex;
	justify-content: space-between;
	color: var(--bg);
}

header + img {
	width: 600px;
}

nav {
	position: absolute;
	right: 0;
  display: table;
}

nav a {
  position: relative;
  width: 20%;
  display: table-cell;
  text-align: left;
  text-decoration: none;
  padding: 10px 20px;
  transition: 0.2s ease color;
}

nav a:before,
nav a:after {
  content: "";
  position: absolute;
  border-radius: 50%;
  transform: scale(0);
  transition: 0.2s ease transform;
}

nav a:before {
  top: 0;
  left: 10px;
  width: 6px;
  height: 6px;
}

nav a:after {
  top: 5px;
  left: 18px;
  width: 4px;
  height: 4px;
}

nav a:nth-child(1):before {
  background-color: yellow;
}

nav a:nth-child(1):after {
  background-color: red;
}

nav a:nth-child(2):before {
  background-color: #00e2ff;
}

nav a:nth-child(2):after {
  background-color: #89ff00;
}

nav a:nth-child(3):before {
  background-color: purple;
}

nav a:nth-child(3):after {
  background-color: palevioletred;
}

nav a:nth-child(4):before {
  background-color: grey;
}

nav a:nth-child(4):after {
  background-color: var(--accent);
}

nav a:nth-child(5):before {
  background-color: royalblue;
}

nav a:nth-child(5):after {
  background-color: aliceblue;
}

#indicator {
  position: absolute;
  bottom: 0;
  width: 30px;
  height: 3px;
  background-color: #fff;
  border-radius: 5px;
  transition: 0.2s ease left;
}

nav a:nth-child(1).nav-link__current ~ #indicator {
	left: 0%;
}
nav a:nth-child(2).nav-link__current ~ #indicator {
	left: 20%;
}
nav a:nth-child(3).nav-link__current ~ #indicator {
	left: 40%;
}
nav a:nth-child(4).nav-link__current ~ #indicator {
	left: 60%;
}
nav a:nth-child(5).nav-link__current ~ #indicator {
	left: 80%;
}

nav a:hover {
  color: var(--accent);
}

nav a:hover:before,
nav a:hover:after {
  transform: scale(1);
}

nav a:nth-child(1):hover ~ #indicator {
  left: 0%;
  background: linear-gradient(130deg, yellow, red);
}

nav a:nth-child(2):hover ~ #indicator {
  left: 20%;
  background: linear-gradient(130deg, #00e2ff, #89ff00);
}

nav a:nth-child(3):hover ~ #indicator {
  left: 40%;
  background: linear-gradient(130deg, purple, palevioletred);
}

nav a:nth-child(4):hover ~ #indicator {
  left: 60%;
  background: linear-gradient(130deg, grey, var(--accent));
}

nav a:nth-child(5):hover ~ #indicator {
  left: 80%;
  background: linear-gradient(130deg, royalblue, aliceblue);
}

/*******
* Apply Page
********/

#form__apply {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	justify-content: center;
	grid-gap: 10px;
}

#form__apply h1 {
	text-align: center;
}

#form__apply button,
#form__apply h1,
#form__apply h5,
#street-address__container,
#surburb-town__container,
#job-reference-number__container {
	grid-column-start: 1;
	grid-column-end: span 2;
	width: 100%;
}

#skill-others__textarea {
	margin-top: 1em;
	display: none;
}

#skill-others:checked ~ #skill-others__textarea {
	display: block;
}
